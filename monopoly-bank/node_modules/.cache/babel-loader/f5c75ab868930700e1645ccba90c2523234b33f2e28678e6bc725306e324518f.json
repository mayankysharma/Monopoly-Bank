{"ast":null,"code":"var _jsxFileName = \"/home/mayank/monopoly-bank/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DollarSign, Send, Plus, ArrowRight, Palette, Undo2, Users } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\n// ^ Adjust the path if you change your folder structure or \n//   if you use an alias like \"@/components/ui/card\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonopolyBank = () => {\n  _s();\n  var _players$find6;\n  const [players, setPlayers] = useState([{\n    id: 1,\n    name: 'Player 1',\n    balance: 1500,\n    color: '#FF0000'\n  }, {\n    id: 2,\n    name: 'Player 2',\n    balance: 1500,\n    color: '#0000FF'\n  }]);\n  const [history, setHistory] = useState([]);\n  const [sourcePlayer, setSourcePlayer] = useState(null);\n  const [targetPlayers, setTargetPlayers] = useState(new Set());\n  const [amount, setAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('add');\n  const [editingName, setEditingName] = useState(null);\n  const [multiSelectMode, setMultiSelectMode] = useState(false);\n  const clearSelections = () => {\n    setSourcePlayer(null);\n    setTargetPlayers(new Set());\n  };\n  const addNewPlayer = () => {\n    const oldState = [...players];\n    const newPlayer = {\n      id: players.length + 1,\n      name: `Player ${players.length + 1}`,\n      balance: 1500,\n      color: `#${Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0')}`\n    };\n    setPlayers([...players, newPlayer]);\n    setHistory([{\n      players: oldState,\n      description: `Added new player: ${newPlayer.name}`,\n      timestamp: new Date().toLocaleTimeString()\n    }, ...history]);\n  };\n  const updatePlayerColor = (playerId, color) => {\n    var _players$find;\n    const oldState = [...players];\n    setPlayers(players.map(player => player.id === playerId ? {\n      ...player,\n      color\n    } : player));\n    setHistory([{\n      players: oldState,\n      description: `Changed color for ${(_players$find = players.find(p => p.id === playerId)) === null || _players$find === void 0 ? void 0 : _players$find.name}`,\n      timestamp: new Date().toLocaleTimeString()\n    }, ...history]);\n  };\n  const updatePlayerName = (playerId, newName) => {\n    var _players$find2;\n    const oldState = [...players];\n    const oldName = (_players$find2 = players.find(p => p.id === playerId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name;\n    setPlayers(players.map(player => player.id === playerId ? {\n      ...player,\n      name: newName\n    } : player));\n    setHistory([{\n      players: oldState,\n      description: `Renamed ${oldName} to ${newName}`,\n      timestamp: new Date().toLocaleTimeString()\n    }, ...history]);\n    setEditingName(null);\n  };\n  const handleTransaction = () => {\n    if (!amount) return;\n    const oldState = [...players];\n    const timestamp = new Date().toLocaleTimeString();\n    let description = '';\n    if (transactionType === 'transfer') {\n      var _players$find3;\n      if (!sourcePlayer || targetPlayers.size === 0) return;\n      const totalAmount = parseInt(amount);\n      if (isNaN(totalAmount)) return;\n      const perPlayerAmount = Math.floor(totalAmount / targetPlayers.size);\n      setPlayers(players.map(player => {\n        if (player.id === sourcePlayer) {\n          return {\n            ...player,\n            balance: player.balance - totalAmount\n          };\n        }\n        if (targetPlayers.has(player.id)) {\n          return {\n            ...player,\n            balance: player.balance + perPlayerAmount\n          };\n        }\n        return player;\n      }));\n      const sourceName = (_players$find3 = players.find(p => p.id === sourcePlayer)) === null || _players$find3 === void 0 ? void 0 : _players$find3.name;\n      const targetNames = Array.from(targetPlayers).map(id => {\n        var _players$find4;\n        return (_players$find4 = players.find(p => p.id === id)) === null || _players$find4 === void 0 ? void 0 : _players$find4.name;\n      }).join(', ');\n      description = `Transfer $${totalAmount} from ${sourceName} to ${targetNames} ($${perPlayerAmount} each)`;\n    } else {\n      // 'add' or 'subtract'\n      const totalAmount = parseInt(amount);\n      if (isNaN(totalAmount)) return;\n\n      // If multiSelectMode is true, use targetPlayers as the set of IDs\n      // Otherwise, single select, so just use sourcePlayer\n      const targetIds = multiSelectMode ? targetPlayers : new Set([sourcePlayer]);\n      setPlayers(players.map(player => {\n        if (targetIds.has(player.id)) {\n          return {\n            ...player,\n            balance: transactionType === 'add' ? player.balance + totalAmount : player.balance - totalAmount\n          };\n        }\n        return player;\n      }));\n      const playerNames = Array.from(targetIds).map(id => {\n        var _players$find5;\n        return (_players$find5 = players.find(p => p.id === id)) === null || _players$find5 === void 0 ? void 0 : _players$find5.name;\n      }).join(', ');\n      description = transactionType === 'add' ? `Added $${totalAmount} to ${playerNames}` : `Subtracted $${totalAmount} from ${playerNames}`;\n    }\n    setHistory([{\n      players: oldState,\n      description,\n      timestamp\n    }, ...history]);\n    setAmount('');\n    if (!multiSelectMode) {\n      setTargetPlayers(new Set());\n      setSourcePlayer(null);\n    }\n  };\n  const handlePlayerClick = playerId => {\n    if (transactionType === 'transfer') {\n      if (!sourcePlayer) {\n        // If we have no source selected yet, set this player as the source\n        setSourcePlayer(playerId);\n      } else if (sourcePlayer !== playerId) {\n        // If we already have a source, toggle this player in the target set\n        const newTargets = new Set(targetPlayers);\n        if (newTargets.has(playerId)) {\n          newTargets.delete(playerId);\n        } else {\n          newTargets.add(playerId);\n        }\n        setTargetPlayers(newTargets);\n      }\n    } else if (multiSelectMode) {\n      // Toggle this player in the target set\n      const newTargets = new Set(targetPlayers);\n      if (newTargets.has(playerId)) {\n        newTargets.delete(playerId);\n      } else {\n        newTargets.add(playerId);\n      }\n      setTargetPlayers(newTargets);\n    } else {\n      // Single select\n      setSourcePlayer(playerId);\n      setTargetPlayers(new Set());\n    }\n  };\n  const undoLastTransaction = () => {\n    if (history.length === 0) return;\n    const lastTransaction = history[0];\n    setPlayers(lastTransaction.players);\n    setHistory(history.slice(1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \"Monopoly Bank\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [transactionType !== 'transfer' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setMultiSelectMode(!multiSelectMode);\n                clearSelections();\n              },\n              className: `flex items-center gap-2 px-3 py-1 rounded border ${multiSelectMode ? 'bg-blue-100' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(Users, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), \"Multi-select\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: undoLastTransaction,\n              disabled: history.length === 0,\n              className: \"flex items-center gap-2 px-3 py-1 rounded border disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(Undo2, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), \"Undo\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: [players.map(player => /*#__PURE__*/_jsxDEV(Card, {\n            className: `${sourcePlayer === player.id ? 'ring-2 ring-blue-500' : ''} ${targetPlayers.has(player.id) ? 'ring-2 ring-green-500' : ''} ${multiSelectMode && targetPlayers.has(player.id) ? 'ring-2 ring-blue-500' : ''}`,\n            onClick: () => handlePlayerClick(player.id),\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: \"p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-2\",\n                children: [editingName === player.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  defaultValue: player.name,\n                  className: \"border rounded px-2 py-1\",\n                  onBlur: e => updatePlayerName(player.id, e.target.value),\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      updatePlayerName(player.id, e.target.value);\n                    }\n                  },\n                  onClick: e => e.stopPropagation(),\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-bold\",\n                  onDoubleClick: () => setEditingName(player.id),\n                  children: player.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Palette, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"color\",\n                    value: player.color,\n                    onChange: e => updatePlayerColor(player.id, e.target.value),\n                    onClick: e => e.stopPropagation(),\n                    className: \"w-6 h-6 cursor-pointer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl p-2 rounded\",\n                style: {\n                  backgroundColor: `${player.color}20`\n                },\n                children: [\"$\", player.balance]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Card, {\n            className: \"cursor-pointer hover:bg-gray-50\",\n            onClick: addNewPlayer,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: \"p-4 flex items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-6 w-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Add Player\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 flex flex-wrap gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"p-2 border rounded\",\n            value: transactionType,\n            onChange: e => {\n              setTransactionType(e.target.value);\n              clearSelections();\n              setMultiSelectMode(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"add\",\n              children: \"Add Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"subtract\",\n              children: \"Subtract Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"transfer\",\n              children: \"Transfer Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: \"Amount\",\n            className: \"p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTransaction,\n            className: \"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed\",\n            disabled: !amount || !multiSelectMode && !sourcePlayer || transactionType === 'transfer' && (!sourcePlayer || targetPlayers.size === 0),\n            children: [transactionType === 'transfer' ? /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), \"Submit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), transactionType === 'transfer' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-gray-600\",\n          children: [!sourcePlayer && 'Select source player', sourcePlayer && targetPlayers.size === 0 && 'Select target player(s)', sourcePlayer && targetPlayers.size > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Transfer $\", amount || '0', \" from\", ' ', (_players$find6 = players.find(p => p.id === sourcePlayer)) === null || _players$find6 === void 0 ? void 0 : _players$find6.name, \" to\", ' ', Array.from(targetPlayers).map(id => {\n              var _players$find7;\n              return (_players$find7 = players.find(p => p.id === id)) === null || _players$find7 === void 0 ? void 0 : _players$find7.name;\n            }).join(', '), amount && targetPlayers.size > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [' ', \"($\", Math.floor(parseInt(amount) / targetPlayers.size), \" each)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold mb-2\",\n            children: \"Transaction History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-40 overflow-y-auto\",\n            children: history.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-1\",\n              children: [transaction.timestamp, \": \", transaction.description]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(MonopolyBank, \"bznYMCDRIl2UzLMLVFpDn4UgLuA=\");\n_c = MonopolyBank;\nexport default MonopolyBank;\nvar _c;\n$RefreshReg$(_c, \"MonopolyBank\");","map":{"version":3,"names":["React","useState","DollarSign","Send","Plus","ArrowRight","Palette","Undo2","Users","Card","CardContent","CardHeader","CardTitle","jsxDEV","_jsxDEV","MonopolyBank","_s","_players$find6","players","setPlayers","id","name","balance","color","history","setHistory","sourcePlayer","setSourcePlayer","targetPlayers","setTargetPlayers","Set","amount","setAmount","transactionType","setTransactionType","editingName","setEditingName","multiSelectMode","setMultiSelectMode","clearSelections","addNewPlayer","oldState","newPlayer","length","Math","floor","random","toString","padStart","description","timestamp","Date","toLocaleTimeString","updatePlayerColor","playerId","_players$find","map","player","find","p","updatePlayerName","newName","_players$find2","oldName","handleTransaction","_players$find3","size","totalAmount","parseInt","isNaN","perPlayerAmount","has","sourceName","targetNames","Array","from","_players$find4","join","targetIds","playerNames","_players$find5","handlePlayerClick","newTargets","delete","add","undoLastTransaction","lastTransaction","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","defaultValue","onBlur","e","target","value","onKeyPress","key","stopPropagation","autoFocus","onDoubleClick","onChange","style","backgroundColor","placeholder","_players$find7","transaction","index","_c","$RefreshReg$"],"sources":["/home/mayank/monopoly-bank/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  DollarSign,\n  Send,\n  Plus,\n  ArrowRight,\n  Palette,\n  Undo2,\n  Users\n} from 'lucide-react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle\n} from './components/ui/card'; \n// ^ Adjust the path if you change your folder structure or \n//   if you use an alias like \"@/components/ui/card\"\n\ninterface Player {\n  id: number;\n  name: string;\n  balance: number;\n  color: string;\n}\n\ninterface TransactionRecord {\n  players: Player[];\n  description: string;\n  timestamp: string;\n}\n\nconst MonopolyBank: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>([\n    { id: 1, name: 'Player 1', balance: 1500, color: '#FF0000' },\n    { id: 2, name: 'Player 2', balance: 1500, color: '#0000FF' }\n  ]);\n\n  const [history, setHistory] = useState<TransactionRecord[]>([]);\n  const [sourcePlayer, setSourcePlayer] = useState<number | null>(null);\n  const [targetPlayers, setTargetPlayers] = useState<Set<number>>(new Set());\n  const [amount, setAmount] = useState('');\n  const [transactionType, setTransactionType] = useState<'add' | 'subtract' | 'transfer'>('add');\n  const [editingName, setEditingName] = useState<number | null>(null);\n  const [multiSelectMode, setMultiSelectMode] = useState(false);\n\n  const clearSelections = () => {\n    setSourcePlayer(null);\n    setTargetPlayers(new Set());\n  };\n\n  const addNewPlayer = () => {\n    const oldState = [...players];\n    const newPlayer = {\n      id: players.length + 1,\n      name: `Player ${players.length + 1}`,\n      balance: 1500,\n      color: `#${Math.floor(Math.random() * 16777215)\n        .toString(16)\n        .padStart(6, '0')}`\n    };\n    setPlayers([...players, newPlayer]);\n    setHistory([\n      {\n        players: oldState,\n        description: `Added new player: ${newPlayer.name}`,\n        timestamp: new Date().toLocaleTimeString()\n      },\n      ...history\n    ]);\n  };\n\n  const updatePlayerColor = (playerId: number, color: string) => {\n    const oldState = [...players];\n    setPlayers(players.map(player =>\n      player.id === playerId ? { ...player, color } : player\n    ));\n    setHistory([\n      {\n        players: oldState,\n        description: `Changed color for ${\n          players.find(p => p.id === playerId)?.name\n        }`,\n        timestamp: new Date().toLocaleTimeString()\n      },\n      ...history\n    ]);\n  };\n\n  const updatePlayerName = (playerId: number, newName: string) => {\n    const oldState = [...players];\n    const oldName = players.find(p => p.id === playerId)?.name;\n    setPlayers(players.map(player =>\n      player.id === playerId ? { ...player, name: newName } : player\n    ));\n    setHistory([\n      {\n        players: oldState,\n        description: `Renamed ${oldName} to ${newName}`,\n        timestamp: new Date().toLocaleTimeString()\n      },\n      ...history\n    ]);\n    setEditingName(null);\n  };\n\n  const handleTransaction = () => {\n    if (!amount) return;\n\n    const oldState = [...players];\n    const timestamp = new Date().toLocaleTimeString();\n    let description = '';\n\n    if (transactionType === 'transfer') {\n      if (!sourcePlayer || targetPlayers.size === 0) return;\n      const totalAmount = parseInt(amount);\n      if (isNaN(totalAmount)) return;\n\n      const perPlayerAmount = Math.floor(totalAmount / targetPlayers.size);\n      setPlayers(players.map(player => {\n        if (player.id === sourcePlayer) {\n          return { ...player, balance: player.balance - totalAmount };\n        }\n        if (targetPlayers.has(player.id)) {\n          return { ...player, balance: player.balance + perPlayerAmount };\n        }\n        return player;\n      }));\n\n      const sourceName = players.find(p => p.id === sourcePlayer)?.name;\n      const targetNames = Array.from(targetPlayers)\n        .map(id => players.find(p => p.id === id)?.name)\n        .join(', ');\n      description = `Transfer $${totalAmount} from ${sourceName} to ${targetNames} ($${perPlayerAmount} each)`;\n    } else {\n      // 'add' or 'subtract'\n      const totalAmount = parseInt(amount);\n      if (isNaN(totalAmount)) return;\n\n      // If multiSelectMode is true, use targetPlayers as the set of IDs\n      // Otherwise, single select, so just use sourcePlayer\n      const targetIds = multiSelectMode ? targetPlayers : new Set([sourcePlayer!]);\n\n      setPlayers(players.map(player => {\n        if (targetIds.has(player.id)) {\n          return {\n            ...player,\n            balance:\n              transactionType === 'add'\n                ? player.balance + totalAmount\n                : player.balance - totalAmount\n          };\n        }\n        return player;\n      }));\n\n      const playerNames = Array.from(targetIds)\n        .map(id => players.find(p => p.id === id)?.name)\n        .join(', ');\n\n      description =\n        transactionType === 'add'\n          ? `Added $${totalAmount} to ${playerNames}`\n          : `Subtracted $${totalAmount} from ${playerNames}`;\n    }\n\n    setHistory([{ players: oldState, description, timestamp }, ...history]);\n    setAmount('');\n    if (!multiSelectMode) {\n      setTargetPlayers(new Set());\n      setSourcePlayer(null);\n    }\n  };\n\n  const handlePlayerClick = (playerId: number) => {\n    if (transactionType === 'transfer') {\n      if (!sourcePlayer) {\n        // If we have no source selected yet, set this player as the source\n        setSourcePlayer(playerId);\n      } else if (sourcePlayer !== playerId) {\n        // If we already have a source, toggle this player in the target set\n        const newTargets = new Set(targetPlayers);\n        if (newTargets.has(playerId)) {\n          newTargets.delete(playerId);\n        } else {\n          newTargets.add(playerId);\n        }\n        setTargetPlayers(newTargets);\n      }\n    } else if (multiSelectMode) {\n      // Toggle this player in the target set\n      const newTargets = new Set(targetPlayers);\n      if (newTargets.has(playerId)) {\n        newTargets.delete(playerId);\n      } else {\n        newTargets.add(playerId);\n      }\n      setTargetPlayers(newTargets);\n    } else {\n      // Single select\n      setSourcePlayer(playerId);\n      setTargetPlayers(new Set());\n    }\n  };\n\n  const undoLastTransaction = () => {\n    if (history.length === 0) return;\n    const lastTransaction = history[0];\n    setPlayers(lastTransaction.players);\n    setHistory(history.slice(1));\n  };\n\n  return (\n    <div className=\"p-4 max-w-4xl mx-auto\">\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <DollarSign className=\"h-6 w-6\" />\n              Monopoly Bank\n            </CardTitle>\n            <div className=\"flex gap-2\">\n              {transactionType !== 'transfer' && (\n                <button\n                  onClick={() => {\n                    setMultiSelectMode(!multiSelectMode);\n                    clearSelections();\n                  }}\n                  className={`flex items-center gap-2 px-3 py-1 rounded border ${\n                    multiSelectMode ? 'bg-blue-100' : ''\n                  }`}\n                >\n                  <Users className=\"h-4 w-4\" />\n                  Multi-select\n                </button>\n              )}\n              <button\n                onClick={undoLastTransaction}\n                disabled={history.length === 0}\n                className=\"flex items-center gap-2 px-3 py-1 rounded border disabled:opacity-50\"\n              >\n                <Undo2 className=\"h-4 w-4\" />\n                Undo\n              </button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {players.map(player => (\n              <Card\n                key={player.id}\n                className={`${\n                  sourcePlayer === player.id ? 'ring-2 ring-blue-500' : ''\n                } ${\n                  targetPlayers.has(player.id) ? 'ring-2 ring-green-500' : ''\n                } ${\n                  multiSelectMode && targetPlayers.has(player.id)\n                    ? 'ring-2 ring-blue-500'\n                    : ''\n                }`}\n                onClick={() => handlePlayerClick(player.id)}\n              >\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    {editingName === player.id ? (\n                      <input\n                        type=\"text\"\n                        defaultValue={player.name}\n                        className=\"border rounded px-2 py-1\"\n                        onBlur={(e) =>\n                          updatePlayerName(player.id, e.target.value)\n                        }\n                        onKeyPress={(e) => {\n                          if (e.key === 'Enter') {\n                            updatePlayerName(\n                              player.id,\n                              (e.target as HTMLInputElement).value\n                            );\n                          }\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                        autoFocus\n                      />\n                    ) : (\n                      <h3\n                        className=\"font-bold\"\n                        onDoubleClick={() => setEditingName(player.id)}\n                      >\n                        {player.name}\n                      </h3>\n                    )}\n                    <div className=\"flex items-center gap-2\">\n                      <Palette className=\"h-4 w-4\" />\n                      <input\n                        type=\"color\"\n                        value={player.color}\n                        onChange={(e) =>\n                          updatePlayerColor(player.id, e.target.value)\n                        }\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"w-6 h-6 cursor-pointer\"\n                      />\n                    </div>\n                  </div>\n                  <div\n                    className=\"text-2xl p-2 rounded\"\n                    style={{ backgroundColor: `${player.color}20` }}\n                  >\n                    ${player.balance}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n            <Card\n              className=\"cursor-pointer hover:bg-gray-50\"\n              onClick={addNewPlayer}\n            >\n              <CardContent className=\"p-4 flex items-center justify-center\">\n                <Plus className=\"h-6 w-6\" />\n                <span className=\"ml-2\">Add Player</span>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"mt-6 flex flex-wrap gap-4\">\n            <select\n              className=\"p-2 border rounded\"\n              value={transactionType}\n              onChange={(e) => {\n                setTransactionType(e.target.value as 'add' | 'subtract' | 'transfer');\n                clearSelections();\n                setMultiSelectMode(false);\n              }}\n            >\n              <option value=\"add\">Add Money</option>\n              <option value=\"subtract\">Subtract Money</option>\n              <option value=\"transfer\">Transfer Money</option>\n            </select>\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              placeholder=\"Amount\"\n              className=\"p-2 border rounded\"\n            />\n            <button\n              onClick={handleTransaction}\n              className=\"flex items-center gap-2 bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed\"\n              disabled={\n                !amount ||\n                (!multiSelectMode && !sourcePlayer) ||\n                (transactionType === 'transfer' &&\n                  (!sourcePlayer || targetPlayers.size === 0))\n              }\n            >\n              {transactionType === 'transfer' ? (\n                <ArrowRight className=\"h-4 w-4\" />\n              ) : (\n                <Send className=\"h-4 w-4\" />\n              )}\n              Submit\n            </button>\n          </div>\n\n          {transactionType === 'transfer' && (\n            <div className=\"mt-4 text-gray-600\">\n              {!sourcePlayer && 'Select source player'}\n              {sourcePlayer && targetPlayers.size === 0 && 'Select target player(s)'}\n              {sourcePlayer && targetPlayers.size > 0 && (\n                <span>\n                  Transfer ${amount || '0'} from{' '}\n                  {players.find(p => p.id === sourcePlayer)?.name} to{' '}\n                  {Array.from(targetPlayers)\n                    .map(id => players.find(p => p.id === id)?.name)\n                    .join(', ')}\n                  {amount && targetPlayers.size > 0 && (\n                    <span>\n                      {' '}\n                      (${Math.floor(parseInt(amount) / targetPlayers.size)} each)\n                    </span>\n                  )}\n                </span>\n              )}\n            </div>\n          )}\n\n          {history.length > 0 && (\n            <div className=\"mt-6\">\n              <h3 className=\"font-bold mb-2\">Transaction History</h3>\n              <div className=\"max-h-40 overflow-y-auto\">\n                {history.map((transaction, index) => (\n                  <div key={index} className=\"text-sm text-gray-600 mb-1\">\n                    {transaction.timestamp}: {transaction.description}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default MonopolyBank;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}